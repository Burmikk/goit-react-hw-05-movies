{"version":3,"file":"static/js/710.23c7827c.chunk.js","mappings":"6OAmCA,EAjCmB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACpB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,WAEjBC,EAAAA,EAAAA,YAAU,WACRF,EAASG,QAAQC,OAClB,GAAE,IAaH,OACE,kBAAMC,SAPa,SAAAC,GACnBA,EAAEC,iBACFX,EAASE,GACTC,EAAU,GACX,EAGC,WACE,kBACES,KAAK,OACLC,SAfe,SAAAH,GACnB,IAAQI,EAAUJ,EAAEK,OAAZD,MACRX,EAAUW,EACX,EAaKA,MAAOZ,EACPc,IAAKZ,KAEP,uCAGL,E,0BCKD,EAhCe,WACb,OAA4BH,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeC,EAAf,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMnB,EAASkB,EAAaE,IAAI,WAEhChB,EAAAA,EAAAA,YAAU,WACR,IAAMiB,EAAgB,mCAAG,gHAEEC,EAAAA,EAAAA,IAAiBtB,GAFnB,gBAEbuB,EAFa,EAEbA,KACRP,EAAUO,EAAKC,SAHM,yGAAH,qDAMlBxB,GACFqB,GAEH,GAAE,CAACrB,IAMJ,OACE,iCACE,SAAC,EAAD,CAAYF,SANK,SAAAc,GACnBO,EAAgB,CAAEnB,OAAQY,GAC3B,KAKG,yBACE,SAACa,EAAA,EAAD,CAAWV,OAAQA,QAI1B,C,oDCrBD,IAbkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbW,GAAWC,EAAAA,EAAAA,MASjB,OAPmBZ,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAC5B,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMN,GAAYO,GAAE,kBAAaJ,GAAhD,SACGC,KAFID,EADmB,GAQ/B,C,2JCXKK,E,OAAiBC,EAAAA,OAAa,CAClCC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAGAC,EAAoB,WAC/B,OAAOL,EAAed,IAAI,sBAC3B,EAEYoB,EAAiB,SAAAX,GAC5B,OAAOK,EAAed,IAAf,iBAA6BS,GACrC,EAEYY,EAAe,SAAAZ,GAC1B,OAAOK,EAAed,IAAf,iBAA6BS,EAA7B,YACR,EAEYa,EAAkB,SAAAb,GAC7B,OAAOK,EAAed,IAAf,iBAA6BS,EAA7B,YACR,EAEYP,EAAmB,SAAAV,GAC9B,OAAOsB,EAAed,IAAI,gBAAiB,CACzCiB,OAAQ,CACNM,MAAO/B,IAGZ,C","sources":["components/SearchFrom/SearchForm.jsx","pages/Movies/Movies.jsx","shared/MovieList/MovieList.jsx","shared/api/moviesApi.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\n\nconst SearchForm = ({ onSearch }) => {\n  const [search, setSearch] = useState('');\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setSearch(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSearch(search);\n    setSearch('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        onChange={handleChange}\n        value={search}\n        ref={inputRef}\n      />\n      <button>Find</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import SearchForm from 'components/SearchFrom/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieBySearch } from 'shared/api/moviesApi';\nimport MovieList from 'shared/MovieList/MovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchSearchMovie = async () => {\n      try {\n        const { data } = await getMovieBySearch(search);\n        setMovies(data.results);\n      } catch (error) {}\n    };\n    if (search) {\n      fetchSearchMovie();\n    }\n  }, [search]);\n\n  const handleSearch = value => {\n    setSearchParams({ search: value });\n  };\n\n  return (\n    <>\n      <SearchForm onSearch={handleSearch} />\n      <ul>\n        <MovieList movies={movies} />\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  const moviesList = movies.map(({ id, title }) => (\n    <li key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {title}\n      </Link>\n    </li>\n  ));\n  return moviesList;\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\nconst moviesInstanse = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '85b4dc1af4e574bfc90c25d3ef4bf4bc',\n  },\n});\nexport const getTrendingMovies = () => {\n  return moviesInstanse.get('/trending/movie/day');\n};\n\nexport const getMovieParams = id => {\n  return moviesInstanse.get(`/movie/${id}`);\n};\n\nexport const getMovieCast = id => {\n  return moviesInstanse.get(`/movie/${id}/credits`);\n};\n\nexport const getMovieReviews = id => {\n  return moviesInstanse.get(`/movie/${id}/reviews`);\n};\n\nexport const getMovieBySearch = value => {\n  return moviesInstanse.get('/search/movie', {\n    params: {\n      query: value,\n    },\n  });\n};\n"],"names":["onSearch","useState","search","setSearch","inputRef","useRef","useEffect","current","focus","onSubmit","e","preventDefault","type","onChange","value","target","ref","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","fetchSearchMovie","getMovieBySearch","data","results","MovieList","location","useLocation","map","id","title","state","from","to","moviesInstanse","axios","baseURL","params","api_key","getTrendingMovies","getMovieParams","getMovieCast","getMovieReviews","query"],"sourceRoot":""}