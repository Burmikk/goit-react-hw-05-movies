{"version":3,"file":"static/js/136.02d0dc7f.chunk.js","mappings":"8PACA,EAA4B,iCAA5B,EAAmE,2BAAnE,EAAwG,+BAAxG,EAA8I,4BAA9I,EAAwL,mCAAxL,EAAyO,mCAAzO,EAA8R,uCAA9R,EAAuV,uC,SCyFvV,EApFqB,WAAO,IAAD,EACzB,GAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,KAErCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEOC,EAAAA,EAAAA,IAAeT,EAAOU,SAF7B,gBAERC,EAFQ,EAERA,KACRd,EAAWc,GAHK,gDAKhBZ,EAAS,KAAMa,SAAW,+BALV,yDAAH,qDASjBJ,GACD,GAAE,CAACR,EAAOU,UACX,IACEG,EAMEjB,EANFiB,YACAC,EAKElB,EALFkB,MACAC,EAIEnB,EAJFmB,SACAC,EAGEpB,EAHFoB,aAJF,EAOIpB,EAFFqB,OAAAA,OALF,MAKW,GALX,EAMEC,EACEtB,EADFsB,OAEIC,EAAaF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAC5B,eAAIC,UAAWC,EAAf,SACGF,GADmCD,EADV,IAO9B,OACE,8BACGvB,GACC,yBAAIA,EAAJ,QAEA,iBAAKyB,UAAWC,EAAhB,WACE,mBAAQD,UAAWC,EAAUC,QAPtB,kBAAMvB,EAASE,EAAf,EAOP,sBAGA,iBAAKiB,GAAG,UAAUE,UAAWC,EAA7B,WACE,gBACEE,IAAG,6CAAwCb,GAC3Cc,IAAI,GACJC,MAAM,SAER,iBAAKL,UAAWC,EAAhB,WACE,wBAAKV,KACL,wCAAgBe,KAAKC,MAAqB,GAAfd,GAA3B,QACA,sCACA,uBAAID,KACJ,oCACA,eAAIQ,UAAWC,EAAf,SAAkCL,KAClC,qCACA,yBAAID,EAAJ,eAGJ,4BACE,oDACA,gBAAIK,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAUlB,MAAO,CAAEF,KAAAA,GAAQ2B,GAAG,OAA/C,qBAIF,eAAIR,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAUlB,MAAO,CAAEF,KAAAA,GAAQ2B,GAAG,UAA/C,8BAMN,SAAC,KAAD,QAKT,C,2JCtFKC,E,OAAiBC,EAAAA,OAAa,CAClCC,QAAS,gCACTlC,OAAQ,CACNmC,QAAS,sCAGAC,EAAoB,WAC/B,OAAOJ,EAAeK,IAAI,sBAC3B,EAEY5B,EAAiB,SAAAY,GAC5B,OAAOW,EAAeK,IAAf,iBAA6BhB,GACrC,EAEYiB,EAAe,SAAAjB,GAC1B,OAAOW,EAAeK,IAAf,iBAA6BhB,EAA7B,YACR,EAEYkB,EAAkB,SAAAlB,GAC7B,OAAOW,EAAeK,IAAf,iBAA6BhB,EAA7B,YACR,EAEYmB,EAAmB,SAAAC,GAC9B,OAAOT,EAAeK,IAAI,gBAAiB,CACzCrC,OAAQ,CACN0C,MAAOD,IAGZ,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/movie-details.module.scss?cb87","pages/MovieDetails/MovieDetails.jsx","shared/api/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movie-details_container__Jv1ir\",\"btn\":\"movie-details_btn__-YYZ1\",\"wrapper\":\"movie-details_wrapper__m5oVT\",\"info\":\"movie-details_info__i1bOx\",\"genres_list\":\"movie-details_genres_list__QzbUj\",\"genres_item\":\"movie-details_genres_item__a19kf\",\"additional_list\":\"movie-details_additional_list__8A4VQ\",\"additional_item\":\"movie-details_additional_item__1nJcF\"};","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getMovieParams } from 'shared/api/moviesApi';\nimport { Link, Outlet } from 'react-router-dom';\nimport scss from './movie-details.module.scss';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState([]);\n  const [error, setError] = useState('');\n\n  const params = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchParams = async () => {\n      try {\n        const { data } = await getMovieParams(params.movieId);\n        setDetails(data);\n      } catch (error) {\n        setError(error.message || 'Something wrong! Try later!');\n      }\n    };\n\n    fetchParams();\n  }, [params.movieId]);\n  const {\n    poster_path,\n    title,\n    overview,\n    vote_average,\n    genres = [],\n    budget,\n  } = details;\n  const genresName = genres.map(({ id, name }) => (\n    <li className={scss.genres_item} key={id}>\n      {name}\n    </li>\n  ));\n\n  const goBack = () => navigate(from);\n  return (\n    <>\n      {error ? (\n        <p>{error} </p>\n      ) : (\n        <div className={scss.container}>\n          <button className={scss.btn} onClick={goBack}>\n            Go back\n          </button>\n          <div id=\"wrapper\" className={scss.wrapper}>\n            <img\n              src={`https://image.tmdb.org/t/p/original${poster_path}`}\n              alt=\"\"\n              width=\"300\"\n            />\n            <div className={scss.info}>\n              <h2>{title}</h2>\n              <p>User Score: {Math.round(vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h4>Genres</h4>\n              <ul className={scss.genres_list}>{genresName}</ul>\n              <h4>Budget:</h4>\n              <p>{budget} $</p>\n            </div>\n          </div>\n          <div>\n            <h4>Additional information</h4>\n            <ul className={scss.additional_list}>\n              <li className={scss.additional_item}>\n                <Link className={scss.btn} state={{ from }} to=\"cast\">\n                  Cast\n                </Link>\n              </li>\n              <li className={scss.additional_item}>\n                <Link className={scss.btn} state={{ from }} to=\"reviews\">\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst moviesInstanse = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '85b4dc1af4e574bfc90c25d3ef4bf4bc',\n  },\n});\nexport const getTrendingMovies = () => {\n  return moviesInstanse.get('/trending/movie/day');\n};\n\nexport const getMovieParams = id => {\n  return moviesInstanse.get(`/movie/${id}`);\n};\n\nexport const getMovieCast = id => {\n  return moviesInstanse.get(`/movie/${id}/credits`);\n};\n\nexport const getMovieReviews = id => {\n  return moviesInstanse.get(`/movie/${id}/reviews`);\n};\n\nexport const getMovieBySearch = value => {\n  return moviesInstanse.get('/search/movie', {\n    params: {\n      query: value,\n    },\n  });\n};\n"],"names":["useState","details","setDetails","error","setError","params","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchParams","getMovieParams","movieId","data","message","poster_path","title","overview","vote_average","genres","budget","genresName","map","id","name","className","scss","onClick","src","alt","width","Math","round","to","moviesInstanse","axios","baseURL","api_key","getTrendingMovies","get","getMovieCast","getMovieReviews","getMovieBySearch","value","query"],"sourceRoot":""}