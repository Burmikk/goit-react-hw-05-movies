{"version":3,"file":"static/js/961.98720385.chunk.js","mappings":"iOAoEA,UA/DqB,WAAO,IAAD,EACzB,GAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,KAErCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEOC,EAAAA,EAAAA,IAAeT,EAAOU,SAF7B,gBAERC,EAFQ,EAERA,KACRd,EAAWc,GAHK,gDAKhBZ,EAAS,KAAMa,SAAW,+BALV,yDAAH,qDASjBJ,GACD,GAAE,CAACR,EAAOU,UACX,IAAQG,EAA4DjB,EAA5DiB,YAAaC,EAA+ClB,EAA/CkB,MAAOC,EAAwCnB,EAAxCmB,SAAUC,EAA8BpB,EAA9BoB,aAAtC,EAAoEpB,EAAhBqB,OAC9CC,QADN,MAA6D,GAA7D,GAC0BC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALD,EAA3B,IAG9B,OACE,8BACGtB,GACC,yBAAIA,EAAJ,QAEA,4BACE,mBAAQwB,QAPD,kBAAMpB,EAASE,EAAf,EAOP,sBACA,gBACEmB,IAAG,6CAAwCV,GAC3CW,IAAI,GACJC,MAAM,SAER,wBAAKX,KACL,wCAAgBY,KAAKC,MAAqB,GAAfX,GAA3B,QACA,sCACA,uBAAID,KACJ,oCACA,wBAAKG,KACL,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMZ,MAAO,CAAEF,KAAAA,GAAQwB,GAAG,OAA1B,qBAIF,yBACE,SAAC,KAAD,CAAMtB,MAAO,CAAEF,KAAAA,GAAQwB,GAAG,UAA1B,2BAKJ,SAAC,KAAD,QAKT,C,2JChEKC,E,OAAiBC,EAAAA,OAAa,CAClCC,QAAS,gCACT/B,OAAQ,CACNgC,QAAS,sCAGAC,EAAoB,WAC/B,OAAOJ,EAAeK,IAAI,sBAC3B,EAEYzB,EAAiB,SAAAW,GAC5B,OAAOS,EAAeK,IAAf,iBAA6Bd,GACrC,EAEYe,EAAe,SAAAf,GAC1B,OAAOS,EAAeK,IAAf,iBAA6Bd,EAA7B,YACR,EAEYgB,EAAkB,SAAAhB,GAC7B,OAAOS,EAAeK,IAAf,iBAA6Bd,EAA7B,YACR,EAEYiB,EAAmB,SAAAC,GAC9B,OAAOT,EAAeK,IAAI,gBAAiB,CACzClC,OAAQ,CACNuC,MAAOD,IAGZ,C","sources":["pages/MovieDetails/MovieDetails.jsx","shared/api/moviesApi.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getMovieParams } from 'shared/api/moviesApi';\nimport { Link, Outlet } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState([]);\n  const [error, setError] = useState('');\n\n  const params = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchParams = async () => {\n      try {\n        const { data } = await getMovieParams(params.movieId);\n        setDetails(data);\n      } catch (error) {\n        setError(error.message || 'Something wrong! Try later!');\n      }\n    };\n\n    fetchParams();\n  }, [params.movieId]);\n  const { poster_path, title, overview, vote_average, genres = [] } = details;\n  const genresName = genres.map(({ id, name }) => <li key={id}>{name}</li>);\n\n  const goBack = () => navigate(from);\n  return (\n    <>\n      {error ? (\n        <p>{error} </p>\n      ) : (\n        <div>\n          <button onClick={goBack}>Go back</button>\n          <img\n            src={`https://image.tmdb.org/t/p/original${poster_path}`}\n            alt=\"\"\n            width=\"300\"\n          />\n          <h2>{title}</h2>\n          <p>User Score: {Math.round(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <ul>{genresName}</ul>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link state={{ from }} to=\"cast\">\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link state={{ from }} to=\"reviews\">\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst moviesInstanse = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '85b4dc1af4e574bfc90c25d3ef4bf4bc',\n  },\n});\nexport const getTrendingMovies = () => {\n  return moviesInstanse.get('/trending/movie/day');\n};\n\nexport const getMovieParams = id => {\n  return moviesInstanse.get(`/movie/${id}`);\n};\n\nexport const getMovieCast = id => {\n  return moviesInstanse.get(`/movie/${id}/credits`);\n};\n\nexport const getMovieReviews = id => {\n  return moviesInstanse.get(`/movie/${id}/reviews`);\n};\n\nexport const getMovieBySearch = value => {\n  return moviesInstanse.get('/search/movie', {\n    params: {\n      query: value,\n    },\n  });\n};\n"],"names":["useState","details","setDetails","error","setError","params","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchParams","getMovieParams","movieId","data","message","poster_path","title","overview","vote_average","genres","genresName","map","id","name","onClick","src","alt","width","Math","round","to","moviesInstanse","axios","baseURL","api_key","getTrendingMovies","get","getMovieCast","getMovieReviews","getMovieBySearch","value","query"],"sourceRoot":""}