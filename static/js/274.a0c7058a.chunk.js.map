{"version":3,"file":"static/js/274.a0c7058a.chunk.js","mappings":"sPACA,EAAuB,8B,SCgCvB,EA5BuB,WACrB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEQC,EAAAA,EAAAA,MAFR,gBAEPC,EAFO,EAEPA,KACRN,EAASM,EAAKC,SAHC,gDAKfL,EAAS,KAAMM,SAAW,+BALX,yDAAH,qDAQhBJ,GACD,GAAE,KAGD,8BACGH,GACC,uBAAIA,KAEJ,eAAIQ,UAAWC,EAAf,UACE,SAACC,EAAA,EAAD,CAAWC,OAAQb,OAK5B,EC/BD,EAAwB,oBCWxB,EATa,WACX,OACE,iCACE,eAAIU,UAAWC,EAAf,6BACA,SAAC,EAAD,MAGL,C,2ECTD,EAAuB,yBAAvB,EAAwD,0B,SCoBxD,EAlBkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAcjB,OAZmBF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OAC5B,eAAIT,UAAWC,EAAf,UACE,UAAC,KAAD,CAAMS,MAAO,CAAEC,KAAMP,GAAYQ,GAAE,kBAAaL,GAAhD,WACE,gBACEM,IAAG,6CAAwCJ,GAC3CK,IAAI,GACJC,MAAM,SAER,cAAGf,UAAWC,EAAd,SAA2BO,QAPAD,EADH,GAa/B,C,2JCjBKS,E,OAAiBC,EAAAA,OAAa,CAClCC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAGAxB,EAAoB,WAC/B,OAAOoB,EAAeK,IAAI,sBAC3B,EAEYC,EAAiB,SAAAf,GAC5B,OAAOS,EAAeK,IAAf,iBAA6Bd,GACrC,EAEYgB,EAAe,SAAAhB,GAC1B,OAAOS,EAAeK,IAAf,iBAA6Bd,EAA7B,YACR,EAEYiB,EAAkB,SAAAjB,GAC7B,OAAOS,EAAeK,IAAf,iBAA6Bd,EAA7B,YACR,EAEYkB,EAAmB,SAAAC,GAC9B,OAAOV,EAAeK,IAAI,gBAAiB,CACzCF,OAAQ,CACNQ,MAAOD,IAGZ,C","sources":["webpack://goit-react-hw-05-movies/./src/components/TrendingMovies/trending-movies.module.scss?0cfa","components/TrendingMovies/TrendingMovies.jsx","webpack://goit-react-hw-05-movies/./src/pages/Home/home.module.scss?c0bb","pages/Home/Home.jsx","webpack://goit-react-hw-05-movies/./src/shared/MovieList/movie-list.module.scss?c126","shared/MovieList/MovieList.jsx","shared/api/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"trending-movies_list__ZlwWs\"};","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'shared/api/moviesApi';\nimport MovieList from 'shared/MovieList/MovieList';\nimport scss from './trending-movies.module.scss';\n\nconst TrendingMovies = () => {\n  const [trend, setTrend] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchTrend = async () => {\n      try {\n        const { data } = await getTrendingMovies();\n        setTrend(data.results);\n      } catch (error) {\n        setError(error.message || 'Something wrong! Try later!');\n      }\n    };\n    fetchTrend();\n  }, []);\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <ul className={scss.list}>\n          <MovieList movies={trend} />\n        </ul>\n      )}\n    </>\n  );\n};\nexport default TrendingMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"home_title__G4gN+\"};","import TrendingMovies from 'components/TrendingMovies/TrendingMovies';\nimport scss from './home.module.scss';\n\nconst Home = () => {\n  return (\n    <>\n      <h2 className={scss.title}>Trending today</h2>\n      <TrendingMovies />\n    </>\n  );\n};\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"movie-list_item__zVeEK\",\"title\":\"movie-list_title__TqaCp\"};","import { Link, useLocation } from 'react-router-dom';\nimport scss from './movie-list.module.scss';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  const moviesList = movies.map(({ id, title, poster_path }) => (\n    <li className={scss.item} key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        <img\n          src={`https://image.tmdb.org/t/p/original${poster_path}`}\n          alt=\"\"\n          width=\"300\"\n        />\n        <p className={scss.title}>{title}</p>\n      </Link>\n    </li>\n  ));\n  return moviesList;\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\nconst moviesInstanse = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '85b4dc1af4e574bfc90c25d3ef4bf4bc',\n  },\n});\nexport const getTrendingMovies = () => {\n  return moviesInstanse.get('/trending/movie/day');\n};\n\nexport const getMovieParams = id => {\n  return moviesInstanse.get(`/movie/${id}`);\n};\n\nexport const getMovieCast = id => {\n  return moviesInstanse.get(`/movie/${id}/credits`);\n};\n\nexport const getMovieReviews = id => {\n  return moviesInstanse.get(`/movie/${id}/reviews`);\n};\n\nexport const getMovieBySearch = value => {\n  return moviesInstanse.get('/search/movie', {\n    params: {\n      query: value,\n    },\n  });\n};\n"],"names":["useState","trend","setTrend","error","setError","useEffect","fetchTrend","getTrendingMovies","data","results","message","className","scss","MovieList","movies","location","useLocation","map","id","title","poster_path","state","from","to","src","alt","width","moviesInstanse","axios","baseURL","params","api_key","get","getMovieParams","getMovieCast","getMovieReviews","getMovieBySearch","value","query"],"sourceRoot":""}